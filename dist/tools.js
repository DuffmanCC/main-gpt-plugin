function r(e){const s=[];return e.modelName===""&&s.push("You must provide a model"),e.pineconeIndex.trim()===""&&s.push("You must provide a pinecone index"),e.primerPrompt.trim()===""&&s.push("You must provide a primer prompt"),e.initMessage.trim()===""&&s.push("You must provide a initial message"),e.aiChatCampaigns.length===0&&e.allowAiChatCampaigns&&e.hasAiChat&&s.push("You must provide at least one AiChat campaign."),e.aiContactCampaigns.length===0&&e.allowAiContactCampaigns&&s.push("You must provide at least one AiContact campaign."),e.limitChat&&e.questionsLimit===0&&s.push("Minimum number of messages if limit chat is enabled is 1"),e.limitChat&&e.beforeFormMessage===""&&s.push("You must provide a message to display before the form"),e.limitChat&&e.showContactForm&&!n(e.formFields)&&s.push("At least one field must be active in the contact form"),s}function n(e){return Object.values(e).some(s=>s.active)}function a(e,s,o,i=2e3){const t={id:Date.now(),type:s,message:o,time:i};e.value=[...e.value,t]}async function m(e,s){try{const o=await fetch(e,{method:"POST",body:s}),i=await o.json();return o.ok?{success:!0,data:i}:{success:!1,error:i.message||"Unknown error"}}catch(o){return{success:!1,error:o.message}}}export{a,m as p,r as v};
