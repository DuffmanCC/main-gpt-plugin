function a(s,o){const e=[];return s.modelName===""&&e.push("You must provide a model"),s.pineconeIndex.trim()===""&&e.push("You must provide a pinecone index"),s.primerPrompt.trim()===""&&e.push("You must provide a primer prompt"),s.initMessage.trim()===""&&e.push("You must provide a initial message"),o==="always"&&s.aiChatCampaigns.length===0&&e.push("You must provide at least one AiChat campaign."),o==="configurable"&&s.allowAiChatCampaigns&&s.aiChatCampaigns.length===0&&e.push("You must provide at least one AiContact campaign."),s.limitChat&&s.questionsLimit===0&&e.push("Minimum number of messages if limit chat is enabled is 1"),s.limitChat&&s.beforeFormMessage===""&&e.push("You must provide a message to display before the form"),s.limitChat&&s.showContactForm&&!t(s.formFields)&&e.push("At least one field must be active in the contact form"),s.limitChat&&s.showContactForm&&o==="always"&&s.aiContactCampaigns.length===0&&e.push("You must provide at least one GDPR leads campaign."),s.limitChat&&s.showContactForm&&o==="configurable"&&s.allowAiContactCampaigns&&s.aiContactCampaigns.length===0&&e.push("You must provide at least one GDPR leads campaign."),e}function t(s){return Object.values(s).some(o=>o.active)}function m(s,o,e,i=2e3){const n={id:Date.now(),type:o,message:e,time:i};s.value=[...s.value,n]}async function r(s,o){try{const e=await fetch(s,{method:"POST",body:o}),i=await e.json();return e.ok?{success:!0,data:i}:{success:!1,error:i.message||"Unknown error"}}catch(e){return{success:!1,error:e.message}}}export{m as a,r as p,a as v};
